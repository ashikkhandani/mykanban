{"version":3,"sources":["components/addForm.js","components/todo/doItem.js","components/todo/doContainer.js","components/inprogress/waitingItem.js","components/inprogress/waitingContainer.js","components/testing/testingItem.js","components/testing/testingContainer.js","components/done/doneItem.js","components/done/doneContainer.js","App.js","reportWebVitals.js","index.js"],"names":["addForm","props","state","value","e","this","setState","target","preventDefault","addItemToDo","className","Form","inline","onSubmit","itemSubmit","bind","FormControl","type","placeholder","onChange","newToDoItemChange","Button","Component","doItem","item","onStatusChange1","onClick","id","task","doContainer","toDo","handleChange1","map","el","waitingItem","onStatusChange2","waitingContainer","toWait","handleChange2","style","backgroundColor","testingItem","onStatusChange3","testingContainer","toTest","handleChange3","doneItem","item4","onStatusChange4","doneContainer","toDone","handleChange4","App","myList","newItem","length","done","console","log","newArrayId","newList","myArray","doTask","filter","waitingTask","testingTask","doneTask","addItem","updateMyList1","updateMyList2","updateMyList3","updateMyList4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3a62baa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nexport default class addForm extends Component {\n  /******* Constructor State    **** */\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n    };\n  }\n  // New Item function\n  newToDoItemChange(e) {\n    this.setState({\n      value: e.target.value,\n    });\n  }\n\n  // Item submit function\n  itemSubmit(e) {\n    e.preventDefault();\n\n    this.props.addItemToDo(this.state.value);\n    this.setState({\n      value: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mb-3 mt-3\">\n        <Form\n          inline\n          className=\"col-sm-12 col-md-5 col-lg-4 text-align-center\"\n          onSubmit={this.itemSubmit.bind(this)}\n        >\n          <FormControl\n            type=\"text\"\n            placeholder=\"Enter your tasks . . .\"\n            className=\"formC my-sm-2 mr-sm-3 mb-2 col-sm-6 col-md-10 col-lg-8\"\n            value={this.state.value}\n            onChange={this.newToDoItemChange.bind(this)}\n          />\n\n          <Button\n            className=\"btnF bg-dark col-sm-3 col-md-5 col-lg-3 my-sm-2 ml-sm-2 ml-md-5 ml-lg-2 mt-sm-2\"\n            type=\"submit\"\n            value=\"Add\"\n          >\n            TO DO\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class doItem extends Component {\n  render() {\n    const { item, onStatusChange1 } = this.props;\n    return (\n      <div className=\"my-3\" onClick={() => onStatusChange1(item.id)}>\n        {<p className=\"doP \">{item.task} </p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DoItem from \"./doItem\";\nexport default class doContainer extends Component {\n  render() {\n    const { toDo, handleChange1 } = this.props;\n\n    return (\n      <div className=\"toDo\">\n        <h4 className=\"bg-primary py-2\">To Do</h4>\n        {toDo.map((el) => {\n          return (\n            <DoItem key={el.id} item={el} onStatusChange1={handleChange1} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class waitingItem extends Component {\n  render() {\n    const { item, onStatusChange2 } = this.props;\n    return (\n      <div className=\"my-3\" onClick={() => onStatusChange2(item.id)}>\n        {<p className=\"waitingP col-12\">{item.task} </p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WaitingItem from \"./waitingItem\";\nexport default class waitingContainer extends Component {\n  render() {\n    const { toWait, handleChange2 } = this.props;\n    return (\n      <div className=\"waiting\">\n        <h4 className=\"py-2\" style={{ backgroundColor: \"#FF4500\" }}>\n          Waiting\n        </h4>\n        {/* map method */}\n        {toWait.map((el) => {\n          return (\n            <WaitingItem\n              key={el.id}\n              item={el}\n              onStatusChange2={handleChange2}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class testingItem extends Component {\n  render() {\n    const { item, onStatusChange3 } = this.props;\n    return (\n      <div className=\"my-3\" onClick={() => onStatusChange3(item.id)}>\n        {<p className=\"testingP\">{item.task} </p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TestingItem from \"./testingItem\";\nexport default class testingContainer extends Component {\n  render() {\n    const { toTest, handleChange3 } = this.props;\n    return (\n      <div className=\"testing\">\n        <h4 className=\"bg-warning py-2\">Testing</h4>\n        {/* map method */}\n        {toTest.map((el) => {\n          return (\n            <TestingItem\n              key={el.id}\n              item={el}\n              onStatusChange3={handleChange3}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class doneItem extends Component {\n  render() {\n    const { item4, onStatusChange4 } = this.props;\n\n    return (\n      <div className=\"my-3\" onClick={() => onStatusChange4(item4.id)}>\n        {<p className=\"doneP\">{item4.task} </p>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DoneItem from \"./doneItem\";\nexport default class doneContainer extends Component {\n  render() {\n    const { toDone, handleChange4 } = this.props;\n    return (\n      <div className=\"done\">\n        <h4 className=\" py-2\" style={{ backgroundColor: \"rgb(25, 224, 25)\" }}>\n          Done\n        </h4>\n        {/* map method */}\n        {toDone.map((el) => {\n          return (\n            <DoneItem key={el.id} item4={el} onStatusChange4={handleChange4} />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddForm from \"./components/addForm\";\nimport ToDo from \"./components/todo/doContainer\";\nimport Waiting from \"./components/inprogress/waitingContainer\";\nimport Testing from \"./components/testing/testingContainer\";\nimport Done from \"./components/done/doneContainer\";\n\nexport class App extends Component {\n  /******* Constructor State ******** */\n  constructor(props) {\n    super(props);\n    this.state = {\n      myList: [],\n    };\n  }\n\n  // Add to do items function with C.Method.\n  addItem(value) {\n    const newItem = {\n      id: this.state.myList.length + 1,\n      task: value,\n      done: 1,\n    };\n    // Add newItem in myList with setState method\n    this.setState({\n      myList: [...this.state.myList, newItem],\n    });\n    console.log(this.state.myList);\n  }\n\n  // 1st Update List function\n  updateMyList1(newArrayId) {\n    const newList = this.state.myList.map((myArray) => {\n      if (myArray.id === newArrayId) {\n        myArray.done = 2;\n        return myArray;\n      } else return myArray;\n    });\n    // Add newList in myList with setState method\n    this.setState({ newList });\n  }\n  // 2nd update list function\n  updateMyList2(newArrayId) {\n    const newList = this.state.myList.map((myArray) => {\n      if (myArray.id === newArrayId) {\n        myArray.done = 3;\n        return myArray;\n      } else return myArray;\n    });\n    // Add newList in myList with setState method\n    this.setState({ newList });\n  }\n  // 3rd update list function\n  updateMyList3(newArrayId) {\n    const newList = this.state.myList.map((myArray) => {\n      if (myArray.id === newArrayId) {\n        myArray.done = 4;\n        return myArray;\n      } else return myArray;\n    });\n    // Add newList in myList with setState method\n    this.setState({ newList });\n  }\n  // 4th update list function\n  updateMyList4(newArrayId) {\n    const newList = this.state.myList.map((myArray) => {\n      if (myArray.id === newArrayId) {\n        myArray.done = 5;\n        return myArray;\n      } else return myArray;\n    });\n    // Add newList in myList with setState method\n    this.setState({ newList });\n  }\n\n  render() {\n    const doTask = this.state.myList.filter((el) => el.done === 1);\n    const waitingTask = this.state.myList.filter((el) => el.done === 2);\n    const testingTask = this.state.myList.filter((el) => el.done === 3);\n    const doneTask = this.state.myList.filter((el) => el.done === 4);\n\n    return (\n      <div className=\"app\">\n        {/* ********** My Title ****************/}\n        <h1 className=\"title py-2 sticky-top\">My Kanban Board </h1>\n\n        {/************ Add Form ****************/}\n        <AddForm addItemToDo={this.addItem.bind(this)} />\n\n        {/***********  All Components ***********/}\n        <div className=\"board row justify-content-around\">\n          {/* --------------------------------- */}\n\n          <ToDo toDo={doTask} handleChange1={this.updateMyList1.bind(this)} />\n          {/* ------------------------------------ */}\n\n          <Waiting\n            toWait={waitingTask}\n            handleChange2={this.updateMyList2.bind(this)}\n          />\n          {/* ------------------------------------ */}\n\n          <Testing\n            toTest={testingTask}\n            handleChange3={this.updateMyList3.bind(this)}\n          />\n          {/* -------------------------------------- */}\n\n          <Done\n            toDone={doneTask}\n            handleChange4={this.updateMyList4.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// React-Bootstrap Link\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// React-FontAwesome Link\nimport \"font-awesome/css/font-awesome.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}